// <auto-generated />
using System;
using BiuroPodrozyAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiuroPodrozyAPI.Migrations
{
    [DbContext(typeof(BiuroPodrozyContext))]
    [Migration("20240424155101_m8")]
    partial class m8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BiuroPodrozyAPI.CMS.Card", b =>
                {
                    b.Property<int>("IdCard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCard"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CardDescription")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CardTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAuthor")
                        .HasColumnType("int");

                    b.Property<int>("IdCardType")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThumbnailURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdCard");

                    b.HasIndex("IdAuthor");

                    b.HasIndex("IdCardType");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.CMS.CardType", b =>
                {
                    b.Property<int>("IdCardType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCardType"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CardTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CardTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdCardType");

                    b.ToTable("CardType");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.CMS.CountryPhoto", b =>
                {
                    b.Property<int>("IdCountryPhoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCountryPhoto"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCountry")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdCountryPhoto");

                    b.HasIndex("IdCountry");

                    b.ToTable("CountryPhoto");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.CMS.HotelPhoto", b =>
                {
                    b.Property<int>("IdHotelPhoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHotelPhoto"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdHotelPhoto");

                    b.HasIndex("IdHotel");

                    b.ToTable("HotelPhoto");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.CMS.Page", b =>
                {
                    b.Property<int>("IdPage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPage"));

                    b.Property<string>("AccessLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IncludeInNavbar")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("PageIndexRelativeURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdPage");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.CMS.Site", b =>
                {
                    b.Property<int>("IdSite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSite"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdSite");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.CMS.TripPhoto", b =>
                {
                    b.Property<int>("IdTripPhoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTripPhoto"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdTripPhoto");

                    b.ToTable("TripPhoto");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.AccountInformation", b =>
                {
                    b.Property<int>("IdAccountInformation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAccountInformation"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EncodedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordValidityTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdAccountInformation");

                    b.ToTable("AccountInformation");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Address", b =>
                {
                    b.Property<int>("IdAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAddress"));

                    b.Property<string>("ApartmentNr")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("HomeNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("IdCity")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdAddress");

                    b.HasIndex("IdCity");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.City", b =>
                {
                    b.Property<int>("IdCity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCity"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCountry")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Population")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdCity");

                    b.HasIndex("IdCountry");

                    b.ToTable("City");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdAccountInformation")
                        .HasColumnType("int");

                    b.Property<int>("IdAddress")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdClient");

                    b.HasIndex("IdAccountInformation");

                    b.HasIndex("IdAddress");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCountry"));

                    b.Property<string>("AbbrCountryName")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("CountrySize")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCapitalCity")
                        .HasColumnType("int");

                    b.Property<int>("IdCurrency")
                        .HasColumnType("int");

                    b.Property<int>("IdLanguage")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.Property<int?>("Population")
                        .HasColumnType("int");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdCountry");

                    b.HasIndex("IdCapitalCity")
                        .IsUnique()
                        .HasFilter("[IdCapitalCity] IS NOT NULL");

                    b.HasIndex("IdCurrency");

                    b.HasIndex("IdLanguage");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Currency", b =>
                {
                    b.Property<int>("IdCurrency")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCurrency"));

                    b.Property<string>("AbbrCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencySymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdCurrency");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmployee"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdAccountInformation")
                        .HasColumnType("int");

                    b.Property<int>("IdAddress")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdEmployee");

                    b.HasIndex("IdAccountInformation");

                    b.HasIndex("IdAddress");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Flight", b =>
                {
                    b.Property<int>("IdFlight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFlight"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("FlightPricePerUnit")
                        .HasColumnType("money");

                    b.Property<string>("FlightStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdArrivalCity")
                        .HasColumnType("int");

                    b.Property<int>("IdDepartureCity")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdFlight");

                    b.HasIndex("IdArrivalCity");

                    b.HasIndex("IdDepartureCity");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Hotel", b =>
                {
                    b.Property<int>("IdHotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHotel"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("HotelPricePerUnit")
                        .HasColumnType("money");

                    b.Property<decimal?>("HotelRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("HotelStars")
                        .HasColumnType("int");

                    b.Property<int>("IdAddress")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdHotel");

                    b.HasIndex("IdAddress")
                        .IsUnique();

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Language", b =>
                {
                    b.Property<int>("IdLanguage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLanguage"));

                    b.Property<string>("AbbrLanguageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdLanguage");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Reservation", b =>
                {
                    b.Property<int>("IdReservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReservation"));

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("AttendeeCount")
                        .HasColumnType("int");

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CityIdCity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<int>("IdArrivalFlight")
                        .HasColumnType("int");

                    b.Property<int>("IdDepartureFlight")
                        .HasColumnType("int");

                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReservationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ReservationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdReservation");

                    b.HasIndex("CityIdCity");

                    b.HasIndex("IdArrivalFlight");

                    b.HasIndex("IdDepartureFlight");

                    b.HasIndex("IdHotel");

                    b.HasIndex("IdTrip");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Service", b =>
                {
                    b.Property<int>("IdService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdService"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<int>("IdServiceType")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ServiceChargingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(7)");

                    b.Property<decimal>("ServiceCost")
                        .HasColumnType("money");

                    b.Property<string>("ServiceDescription")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdService");

                    b.HasIndex("IdServiceType");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.ServiceType", b =>
                {
                    b.Property<int>("IdServiceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServiceType"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ServiceTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdServiceType");

                    b.ToTable("ServiceType");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Trip", b =>
                {
                    b.Property<int>("IdTrip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTrip"));

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<int>("IdDestinationCity")
                        .HasColumnType("int");

                    b.Property<int?>("IdHotel")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("TripCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("TripCostPerAdult")
                        .HasColumnType("money");

                    b.Property<decimal>("TripCostPerChild")
                        .HasColumnType("money");

                    b.Property<string>("TripDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TripName")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("TripType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("WhoCreateId")
                        .HasColumnType("int");

                    b.HasKey("IdTrip");

                    b.HasIndex("IdDestinationCity");

                    b.HasIndex("IdHotel");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("ReservationService", b =>
                {
                    b.Property<int>("ReservationsIdReservation")
                        .HasColumnType("int");

                    b.Property<int>("ServicesIdService")
                        .HasColumnType("int");

                    b.HasKey("ReservationsIdReservation", "ServicesIdService");

                    b.HasIndex("ServicesIdService");

                    b.ToTable("Reservation_Service", (string)null);
                });

            modelBuilder.Entity("TripTripPhoto", b =>
                {
                    b.Property<int>("TripPhotosIdTripPhoto")
                        .HasColumnType("int");

                    b.Property<int>("TripsIdTrip")
                        .HasColumnType("int");

                    b.HasKey("TripPhotosIdTripPhoto", "TripsIdTrip");

                    b.HasIndex("TripsIdTrip");

                    b.ToTable("Trip_TripPhoto", (string)null);
                });

            modelBuilder.Entity("BiuroPodrozyAPI.CMS.Card", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Employee", "Author")
                        .WithMany("Cards")
                        .HasForeignKey("IdAuthor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BiuroPodrozyAPI.CMS.CardType", "CardType")
                        .WithMany()
                        .HasForeignKey("IdCardType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("CardType");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.CMS.CountryPhoto", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Country", "Country")
                        .WithMany("CountryPhotos")
                        .HasForeignKey("IdCountry");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.CMS.HotelPhoto", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Hotel", "Hotel")
                        .WithMany("Photos")
                        .HasForeignKey("IdHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Address", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("IdCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.City", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("IdCountry")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Client", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.AccountInformation", "AccountInformation")
                        .WithMany("Clients")
                        .HasForeignKey("IdAccountInformation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Address", "Address")
                        .WithMany("Clients")
                        .HasForeignKey("IdAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountInformation");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Country", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.City", "CapitalCity")
                        .WithOne()
                        .HasForeignKey("BiuroPodrozyAPI.TravelAgency.Country", "IdCapitalCity")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Currency", "Currency")
                        .WithMany("Countries")
                        .HasForeignKey("IdCurrency")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Language", "Language")
                        .WithMany("Countries")
                        .HasForeignKey("IdLanguage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CapitalCity");

                    b.Navigation("Currency");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Employee", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.AccountInformation", "AccountInformation")
                        .WithMany("Employees")
                        .HasForeignKey("IdAccountInformation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Address", "Address")
                        .WithMany()
                        .HasForeignKey("IdAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountInformation");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Flight", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.City", "ArrivalCity")
                        .WithMany("FlightsArr")
                        .HasForeignKey("IdArrivalCity")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BiuroPodrozyAPI.TravelAgency.City", "DepartureCity")
                        .WithMany("FlightsDep")
                        .HasForeignKey("IdDepartureCity")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ArrivalCity");

                    b.Navigation("DepartureCity");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Hotel", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Address", "Address")
                        .WithOne("Hotel")
                        .HasForeignKey("BiuroPodrozyAPI.TravelAgency.Hotel", "IdAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Reservation", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.City", null)
                        .WithMany("Reservations")
                        .HasForeignKey("CityIdCity");

                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Flight", "ArrivalFlight")
                        .WithMany("ReservationsArr")
                        .HasForeignKey("IdArrivalFlight")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Flight", "DepartureFlight")
                        .WithMany("ReservationsDep")
                        .HasForeignKey("IdDepartureFlight")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Hotel", "Hotel")
                        .WithMany("Reservations")
                        .HasForeignKey("IdHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Trip", "Trip")
                        .WithMany("Reservations")
                        .HasForeignKey("IdTrip")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArrivalFlight");

                    b.Navigation("DepartureFlight");

                    b.Navigation("Hotel");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Service", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.ServiceType", "ServiceType")
                        .WithMany("Services")
                        .HasForeignKey("IdServiceType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Trip", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.City", "DestinationCity")
                        .WithMany("Trips")
                        .HasForeignKey("IdDestinationCity")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Hotel", "Hotel")
                        .WithMany("Trips")
                        .HasForeignKey("IdHotel")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DestinationCity");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("ReservationService", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationsIdReservation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Service", null)
                        .WithMany()
                        .HasForeignKey("ServicesIdService")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TripTripPhoto", b =>
                {
                    b.HasOne("BiuroPodrozyAPI.CMS.TripPhoto", null)
                        .WithMany()
                        .HasForeignKey("TripPhotosIdTripPhoto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiuroPodrozyAPI.TravelAgency.Trip", null)
                        .WithMany()
                        .HasForeignKey("TripsIdTrip")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.AccountInformation", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Address", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.City", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("FlightsArr");

                    b.Navigation("FlightsDep");

                    b.Navigation("Reservations");

                    b.Navigation("Trips");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("CountryPhotos");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Currency", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Employee", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Flight", b =>
                {
                    b.Navigation("ReservationsArr");

                    b.Navigation("ReservationsDep");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Hotel", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Reservations");

                    b.Navigation("Trips");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Language", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.ServiceType", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("BiuroPodrozyAPI.TravelAgency.Trip", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
